yesterday) 3 Neo4j in Docker Compose 4 Docker Compose 5 ●Supports multi-container management. ●Set-up is declarative - using YAML docker-compose.yaml ﬁle ○ services ○ volumes ○ networks, etc. ●1 command can be used to start, stop, or scale a number of services at one time. ●Provides a consistent method for producing an identical environment (no more “well… it works on my machine!) ●Interaction is mostly via command line docker-compose.yaml 6 services: neo4j: container_name: neo4j image: neo4j:latest ports: - 7474:7474 - 7687:7687 environment: - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD} - NEO4J_apoc_export_file_enabled=true - NEO4J_apoc_import_file_enabled=true - NEO4J_apoc_import_file_use__neo4j__config=true - NEO4J_PLUGINS=["apoc", "graph-data-science"] volumes: - ./neo4j_db/data:/data - ./neo4j_db/logs:/logs - ./neo4j_db/import:/var/lib/neo4j/import - ./neo4j_db/plugins:/plugins Never put “secrets” in a docker compose ﬁle. Use .env ﬁles. .env Files - .env ﬁles - stores a collection of environment variables - good way to keep environment variables for different platforms separate - .env.local - .env.dev - .env.prod 7 NEO4J_PASSWORD=abc123!!! .env file Docker Compose Commands ●To test if you have Docker CLI properly installed, run: docker --version ●Major Docker Commands ○ docker compose up ○ docker compose up -d ○ docker compose down ○ docker compose start ○ docker compose stop ○ docker compose build ○ docker compose build --no-cache 8 localhost:7474 9 Neo4j Browser 10