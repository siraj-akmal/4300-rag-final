only one child, then we will promote the unique child to z’s place. 3. If z has two children, then we will identify z’s successor. Call it y. The successor y either is a leaf or has only the right child. Promote y to z’s place. Treat the loss of y using one of the above two solutions. 17 10 10 5 6 1 3 2 4 7 9 13 11 8 5 6 1 3 2 4 9 13 11 8 4 2 3 5 6 1 3 2 4 7 9 13 11 8 5 6 9 13 11 8 7 10 10 10 5 6 1 3 2 4 7 9 13 11 8 5 6 1 3 2 4 13 11 9 10 18 Algorithm This algorithm deletes z from BST T. BST-Delete(T, z) 1: if left[z] = nil or right[z] = nil 2: then y ←z 3: else y ←BST-Successor(z) 4:  y is the node that’s actually removed. 5:  Here y does not have two children. 6: if left[y] ̸= nil 7: then x ←left[y] 8: else x ←right[y] 9:  x is the node that’s moving to y’s position. 10: if x