Availability + Partition Tolerance: System always sends are responds based on distributed store, but may not be the absolute latest data. ACID Alternative for Distrib Systems - BASE ●Basically Available ○Guarantees the availability of the data (per CAP), but response can be “failure”/“unreliable” because the data is in an inconsistent or changing state ○System appears to work most of the time 8 ACID Alternative for Distrib Systems - BASE ●Soft State - The state of the system could change over time, even w/o input. Changes could be result of eventual consistency. ○Data stores don’t have to be write-consistent ○Replicas don’t have to be mutually consistent 9 ACID Alternative for Distrib Systems - BASE ●Eventual Consistency - The system will eventually become consistent ○All writes will eventually stop so all nodes/replicas can be updated 10 Categories of NoSQL DBs - Review 11 First Up → Key-Value Databases 12 Key Value Stores key = value - Key-value stores are designed around: - simplicity - the data model is extremely simple - comparatively, tables in a RDBMS are very complex. - lends itself to simple CRUD ops and API creation 13 Key Value Stores key = value - Key-value stores are designed around: