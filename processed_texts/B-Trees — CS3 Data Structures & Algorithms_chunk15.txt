90 57 70 26 52 85 14 48 45 31 11 19 61 R B+ L R L R L 1 / 23 << < > >> Example B+ Tree Visualization: Delete from a tree of degree 4 12 44 67 58 3/17/25, 9:22 AM 12.6. B-Trees — CS3 Data Structures & Algorithms https://opendsa-server.cs.vt.edu/ODSA/Books/CS3/html/BTree.html#id2 6/9 Figure 12.6.7: An example of deletion in a B+ tree of order four. If deleting a record reduces the number of records in the node below the minimum threshold (called an underflow), then we must do something to keep the node sufficiently full. The first choice is to look at the node’s adjacent siblings to determine if they have a spare record that can be used to fill the gap. If so, then enough records are transferred from the sibling so that both nodes have about the same number of records. This is done so as to delay as long as possible the next time when a delete causes this node to underflow again. This process might require that the parent node has its placeholder key value revised to reflect the true first key value in each node. If neither sibling can lend a record