left=None, right=None): self.value = value self.left = left self.right = right def print_tree(root): def tree_height(node): if not node: return 0 left_height = tree_height(node.left) right_height = tree_height(node.right) return max(left_height, right_height) + 1 height = tree_height(root) tree_levels = [[] for _ in range(height)] def tree_traversal(node, level): if not node: return tree_levels[level].append(node.value) if