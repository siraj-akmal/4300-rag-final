processing by queueing up a set of tasks to be executed sequentially at a later time 29 Linked Lists Crash Course - Sequential data structure of linked nodes (instead of contiguously allocated memory) - Each node points to the next element of the list (except the last one - points to nil/null) - O(1) to insert new value at front or insert new value at end 30 10 front back nil List Commands - Queue Queue-like Ops LPUSH bikes:repairs bike:1 LPUSH bikes:repairs bike:2 RPOP bikes:repairs RPOP biles:repairs 31 List Commands - Stack Stack-like Ops LPUSH bikes:repairs bike:1 LPUSH bikes:repairs bike:2 LPOP bikes:repairs LPOP biles:repairs 32 List Commands - Others Other List Ops LLEN mylist LRANGE <key> <start> <stop> LRANGE mylist 0 3 LRANGE mylist 0 0 LRANGE mylist -2 -1 33 LPUSH mylist “one” LPUSH mylist “two” LPUSH mylist “three” JSON Type - Full support of the JSON standard - Uses JSONPath syntax for parsing/navigating a JSON document - Internally, stored in binary in a tree-structure → fast access to sub elements 34 Set Type - Unordered collection of unique strings (members) - Use Cases: - track unique items (IP addresses visiting a site, page, screen) - primitive relation (set