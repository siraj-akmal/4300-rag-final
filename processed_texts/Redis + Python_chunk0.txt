DS 4300 Redis + Python Mark Fontenot, PhD Northeastern University Redis-py 2 - Redis-py is the standard client for Python. - Maintained by the Redis Company itself - GitHub Repo: redis/redis-py - In your 4300 Conda Environment: pip install redis Connecting to the Server - For your Docker deployment, host could be localhost or 127.0.0.1 - Port is the port mapping given when you created the container (probably the default 6379) - db is the database 0-15 you want to connect to - decode_responses → data comes back from server as bytes. Setting this true converter them (decodes) to strings. 3 import redis redis_client = redis.Redis(host=’localhost’, port=6379, db=2, decode_responses=True) Redis Command List - Full List > here < - Use Filter to get to command for the particular data structure you’re targeting (list, hash, set, etc.) - Redis.py Documentation > here < - The next slides are not meant to be an exhaustive list of commands, only some highlights. Check the documentation for a complete list. 4 String Commands # r represents the Redis client object r.set(‘clickCount:/abc’, 0) val = r.get(‘clickCount:/abc’) r.incr(‘clickCount:/abc’) ret_val = r.get(‘clickCount:/abc’) print(f’click count = {ret_val}’) 5 String Commands - 2 # r represents the Redis client