DS 4300 Large Scale Information Storage and Retrieval B+ Tree Walkthrough Mark Fontenot, PhD Northeastern University 2 B+ Tree : m = 4 Insert: 42, 21, 63, 89 ●Initially, the ﬁrst node is a leaf node AND root node. ●21, 42, … represent keys of some set of K:V pairs ●Leaf nodes store keys and data, although data not shown ●Inserting another key will cause the node to split. 3 B+ Tree : m = 4 Insert: 35 ● Leaf node needs to split to accommodate 35. New leaf node allocated to the right of existing node ● 5/2 values stay in original node; remaining values moved to new node ● Smallest value from new leaf node (42) is copied up to the parent, which needs to be created in this case. It will be an internal node. 4 B+ Tree : m = 4 Insert: 10, 27, 96 ● The insert process starts at the root node. The keys of the root node are searched to ﬁnd out which child node we need to descend to. ○ EX: 10. Since 10 < 42, we follow the pointer to the left of 42 ● Note - none of these new