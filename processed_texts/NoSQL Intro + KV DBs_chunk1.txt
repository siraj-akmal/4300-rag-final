Add last update timestamp and version number columns to every table… read them when changing. THEN, check at the end of transaction to see if any other transaction has caused them to be modiﬁed. 3 Optimistic Concurrency ●Low Conﬂict Systems (backups, analytical dbs, etc.) ○ Read heavy systems ○ the conﬂicts that arise can be handled by rolling back and re-running a transaction that notices a conﬂict. ○ So, optimistic concurrency works well - allows for higher concurrency ●High Conﬂict Systems ○ rolling back and rerunning transactions that encounter a conﬂict → less efﬁcient ○ So, a locking scheme (pessimistic model) might be preferable 4 NoSQL - “NoSQL” ﬁrst used in 1998 by Carlo Strozzi to describe his relational database system that did not use SQL. - More common, modern meaning is “Not Only SQL” - But, sometimes thought of as non-relational DBs - Idea originally developed, in part, as a response to processing unstructured web-based data. 5 https://www.dataversity.net/a-brief-history-of-non-relational-databases/ CAP Theorem Review 6 Reference: https://alperenbayramoglu.com/posts/understanding-cap-theorem/ You can have 2, but not 3, of the following: - Consistency*: Every user of the DB has an identical view of the data at any given instant - Availability: In the event of a