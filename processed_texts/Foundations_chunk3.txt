array; n comparisons ○ Therefore, in the worst case, linear search is O(n) time complexity. ●Binary Search ○ Best case: target is found at mid; 1 comparison (inside the loop) ○ Worst case: target is not in the array; log2 n comparisons ○ Therefore, in the worst case, binary search is O(log2n) time complexity. 9 Back to Database Searching ● Assume data is stored on disk by column id’s value ● Searching for a speciﬁc id = fast. ● But what if we want to search for a speciﬁc specialVal? ○ Only option is linear scan of that column ● Can’t store data on disk sorted by both id and specialVal (at the same time) ○ data would have to be duplicated → space inefﬁcient 10 Back to Database Searching ● Assume data is stored on disk by column id’s value ● Searching for a speciﬁc id = fast. ● But what if we want to search for a speciﬁc specialVal? ○ Only option is linear scan of that column ● Can’t store data on disk sorted by both id and specialVal (at the same time) ○ data would have to be duplicated → space inefﬁcient 11 We need an