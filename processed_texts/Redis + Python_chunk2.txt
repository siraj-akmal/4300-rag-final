the same time, etc. 9 Hash Commands - 1 redis_client.hset('user-session:123', mapping={'first': 'Sam', 'last': 'Uelle', 'company': 'Redis', 'age': 30 }) # prints: #{'name': 'Sam', 'surname': 'Uelle', 'company': 'Redis', 'age': '30'} print(redis_client.hgetall('user-session:123')) 10 Hash Commands - 2 - hset(), hget(), hgetall() - hkeys() - hdel(), hexists(), hlen(), hstrlen() 11 Redis Pipelines - Helps avoid multiple related calls to the server → less network overhead 12 r = redis.Redis(decode_responses=True) pipe = r.pipeline() for i in range(5): pipe.set(f"seat:{i}", f"#{i}") set_5_result = pipe.execute() print(set_5_result) # >>> [True, True, True, True, True] pipe = r.pipeline() # "Chain" pipeline commands together. get_3_result = pipe.get("seat:0").get("seat:3").get("seat:4").execute() print(get_3_result) # >>> ['#0', '#3', '#4'] Redis in Context 13 Redis in ML - Simpliﬁed Example 14 Source: https://www.featureform.com/post/feature-stores-explained-the-three-common-architectures Redis in DS/ML 15 Source: https://madewithml.com/courses/mlops/feature-store/