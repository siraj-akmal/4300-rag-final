If the node has the key that is being searched for, then the search is over. Otherwise, the key at the current node is either strictly smaller than the key that is searched for or strictly greater than the key that is searched for. If the former is the case, then by the BST property, all the keys in th left subtree are strictly less than the key that is searched for. That means that we do not need to search in the left subtree. Thus, we will examine only the right subtree. If the latter is the case, by symmetry we will examine only the right subtree. 7 Algorithm Here k is the key that is searched for and x is the start node. BST-Search(x, k) 1: y ←x 2: while y ̸= nil do 3: if key[y] = k then return y 4: else if key[y] < k then y ←right[y] 5: else y ←left[y] 6: return (“NOT FOUND”) 8 An Example search for 8 7 4 2 6 9 13 11 NIL What is the running time of search? 9 2. The Maximum and the Minimum To ﬁnd the minimum identify the leftmost node, i.e. the farthest