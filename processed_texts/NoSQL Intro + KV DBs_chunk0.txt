DS 4300 NoSQL & KV DBs Mark Fontenot, PhD Northeastern University Some material used with permission from Dr. Rachlin, with thanks! Distributed DBs and ACID - Pessimistic Concurrency ●ACID transactions ○ Focuses on “data safety” ○ considered a pessimistic concurrency model because it assumes one transaction has to protect itself from other transactions ■ IOW, it assumes that if something can go wrong, it will. ○ Conﬂicts are prevented by locking resources until a transaction is complete (there are both read and write locks) ○ Write Lock Analogy → borrowing a book from a library… If you have it, no one else can. 2 See https://www.freecodecamp.org/news/how-databases-guarantee-isolation for more for a deeper dive. Optimistic Concurrency ●Transactions do not obtain locks on data when they read or write ●Optimistic because it assumes conﬂicts are unlikely to occur ○ Even if there is a conﬂict, everything will still be OK. ●But how? ○ Add last update timestamp and version number columns to every table… read them when changing. THEN, check at the end of transaction to see if any other transaction has caused them to be modiﬁed. 3 Optimistic Concurrency ●Low Conﬂict Systems (backups, analytical dbs, etc.) ○ Read heavy systems ○ the